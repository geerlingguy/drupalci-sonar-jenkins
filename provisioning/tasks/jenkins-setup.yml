---
- name: Check if Sonar Jenkins configuration file already exists.
  stat: path=/var/lib/jenkins/hudson.plugins.sonar.SonarPublisher.xml
  register: sonar_config_file

- name: Copy Sonar Jenkins configuration to server.
  template: >
    src={{ item.src }}
    dest={{ item.dest }}
    backup=yes
  with_items:
    - src: jenkins/hudson.plugins.sonar.SonarPublisher.xml.j2
      dest: /var/lib/jenkins/hudson.plugins.sonar.SonarPublisher.xml
    - src: jenkins/hudson.plugins.sonar.SonarRunnerInstallation.xml.j2
      dest: /var/lib/jenkins/hudson.plugins.sonar.SonarRunnerInstallation.xml
  when: sonar_config_file.stat.exists == false
  notify: restart jenkins

- name: Copy in the Drupal Jenkins job templates.
  copy: >
    src=jenkins/Drupal{{ item }}.xml
    dest={{ workspace }}/Drupal{{ item }}.xml
  with_items: "{{ drupal_versions }}"
  notify: restart jenkins

# SEE: http://stackoverflow.com/a/9954283/100134
- name: Import the Jenkins jobs.
  shell: >
    java -jar {{ jenkins_jar_location }} -s http://{{ inventory_hostname }}:8080 login --username "$JCLIUSER" --password "$JCLIPASSWD"
    java -jar {{ jenkins_jar_location }} -s http://{{ inventory_hostname }}:8080/
    create-job "Drupal {{ item }}" < {{ workspace }}/Drupal{{ item }}.xml
  register: import
  changed_when: "import.stdout and 'already exists' not in import.stdout"
  # TODO - Also use 'or' condition for initial install... what to expect?
  # failed: [jenkins] => {"changed": true, "cmd": "java -jar /opt/jenkins-cli.jar -s http://jenkins:8080/ create-job Drupal7 < /root/Drupal7.xml ", "delta": "0:00:01.613581", "end": "2014-01-28 10:39:55.493576", "failed": true, "failed_when_result": true, "item": "", "rc": 0, "start": "2014-01-28 10:39:53.879995", "stdout_lines": []}
  failed_when: "import.stderr and 'already exists' not in import.stderr"
  with_items: "{{ drupal_versions }}"
  when: sonar_config_file.stat.exists == false
  notify: restart jenkins

- name: Ensure Drupal Jenkins phing config directory exists.
  file: >
    path=/etc/jenkins
    state=directory
    mode=755

- name: Copy Drupal Jenkins phing files into place.
  copy: >
    src=jenkins/Drupal{{ item }}-phing.xml
    dest=/etc/jenkins/Drupal{{ item }}-phing.xml
    mode=644
  with_items: "{{ drupal_versions }}"
